@import 'transition';
@import 'linear-gradient';
@use "sass:math";

@mixin keyframes($animation-name) {
  @-webkit-keyframes #{$animation-name} {
    @content;
  }
  @-moz-keyframes #{$animation-name} {
    @content;
  }
  @-o-keyframes #{$animation-name} {
    @content;
  }
  @keyframes #{$animation-name} {
    @content;
  }
}

@mixin placeholder {
  &::-webkit-input-placeholder {@content}
  &:-moz-placeholder {
    @content;
    opacity: 1;
  }
  &::-moz-placeholder {
    @content;
    opacity: 1;
  }
  &:-ms-input-placeholder      {@content}
  &::placeholder               {@content}
}

@mixin box-shadow($params) {
-webkit-box-shadow: #{$params};
   -moz-box-shadow: #{$params};
        box-shadow: #{$params};
}

@mixin transform($transforms) {
   -moz-transform: $transforms;
     -o-transform: $transforms;
    -ms-transform: $transforms;
-webkit-transform: $transforms;
        transform: $transforms;
}

@mixin rotate($degrees) {
  @include transform(rotate(#{$degrees}deg));

  $radians: $degrees * math.$pi / 180;
  filter: progid:DXImageTransform.Microsoft.Matrix(
    M11=#{math.cos($radians)},
    M12=-#{math.sin($radians)},
    M21=#{math.sin($radians)},
    M22=#{math.cos($radians)},
    sizingMethod='auto expand'
  );
  zoom: 1;
}

@mixin border-radius($radius) {
-webkit-border-radius: $radius;
   -moz-border-radius: $radius;
        border-radius: $radius;
        background-clip: padding-box;
}

@mixin calc($property, $expression) {
  #{$property}: -moz-calc(#{$expression});
  #{$property}: -webkit-calc(#{$expression});
  #{$property}: calc(#{$expression});
}

@mixin opacity($opacity) {
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=#{$opacity * 100})";
  filter: alpha(opacity=($opacity * 100));
  -moz-opacity: $opacity;
  -khtml-opacity: $opacity;
  -webkit-opacity: $opacity;
  opacity: $opacity;
}

@mixin filter($filter-type, $filter-amount) {
  -webkit-filter: $filter-type+unquote('(#{$filter-amount})');
  -moz-filter: $filter-type+unquote('(#{$filter-amount})');
  -ms-filter: $filter-type+unquote('(#{$filter-amount})');
  -o-filter: $filter-type+unquote('(#{$filter-amount})');
  filter: $filter-type+unquote('(#{$filter-amount})');
}

@mixin text-decoration-color($color) {
  -webkit-text-decoration-color: $color;
  -moz-text-decoration-color: $color;
  text-decoration-color: $color;
}

@mixin inline-block {
  display: inline-block;
  display: -moz-inline-stack;
 *display: inline;
  zoom: 1;
}
