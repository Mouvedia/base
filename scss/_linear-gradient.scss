/// @param {Number} $value - Value to convert
/// @param {String} $unit - Unit to convert to
/// @return {Number} Converted angle
@function convert-angle($value, $unit) {
  $convertable-units: deg grad turn rad;
  $conversion-factors: 1 (10grad/9deg) (1turn/360deg) (3.1415926rad/180deg);
  @if index($convertable-units, unit($value)) and index($convertable-units, $unit) {
    @return $value
             / nth($conversion-factors, index($convertable-units, unit($value)))
             * nth($conversion-factors, index($convertable-units, $unit));
  }

  @warn "Cannot convert `#{unit($value)}` to `#{$unit}`.";
}

/// @param {Keyword | Angle} $value - Value to convert
/// @require {function} convert-angle
@function legacy-direction($value) {
  $is-direction: index((to top, to top right, to right top, to right, to bottom right, to right bottom, to bottom, to bottom left, to left bottom, to left, to left top, to top left), $value);
  $is-angle: type-of($value) == 'number' and index('deg' 'grad' 'turn' 'rad', unit($value));

  @if not ($is-direction or $is-angle) {
    @warn "Cannot convert `#{$value}` to legacy syntax because it doesn't seem to be an angle or a direction";
  }

  $conversion-map: (
    to top          : bottom,
    to top right    : bottom left,
    to right top    : left bottom,
    to right        : left,
    to bottom right : top left,
    to right bottom : left top,
    to bottom       : top,
    to bottom left  : top right,
    to left bottom  : right top,
    to left         : right,
    to left top     : right bottom,
    to top left     : bottom right
  );

  @if map-has-key($conversion-map, $value) {
    @return map-get($conversion-map, $value);
  }

  @return 90deg - convert-angle($value, 'deg');
}

@mixin linear-gradient($direction, $from, $to) {
  $direction:
    if($direction == 180deg, (to bottom),
    if($direction == 90deg, (to right),
    $direction
  ));
  $IEdirection: if($direction == (to right), 1, 0);
  $WKpoint: if($direction == (to right), right top, left bottom);

  background: mix($from, $to, 50%);
  background: -webkit-gradient(linear, left top, $WKpoint, color-stop(0, $from), color-stop(1, $to));
  background: -webkit-linear-gradient(legacy-direction($direction), $from, $to);
  background: -moz-linear-gradient(legacy-direction($direction), $from, $to);
  background: -o-linear-gradient(legacy-direction($direction), $from, $to);
  background: -ms-linear-gradient(legacy-direction($direction), $from, $to); // IE10 Consumer Preview
  background: linear-gradient($direction, $from, $to);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$from}', endColorstr='#{$to}', GradientType=#{$IEdirection});
}
